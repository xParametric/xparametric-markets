"use client";
import { create } from "ipfs-http-client";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/navigation";
import React, { useEffect, useState } from "react";
// import Navbar from "../../components/Navbar";
import { useData } from "@/context/DataContext";
import {
  Box,
  Button,
  Typography,
  TextField,
  FormControl,
  InputLabel,
  Container,
} from "@mui/material";

const Admin = () => {
  const router = useRouter();
  const { polymarket, loadWeb3, account } = useData!();
  const [loading, setLoading] = useState(false);
  const client = create({ url: "https://ipfs.infura.io:5001/api/v0" });

  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [imageHash, setImageHash] = useState("");
  const [resolverUrl, setResolverUrl] = useState("");
  const [timestamp, setTimestamp] = useState<
    string | number | readonly string[] | undefined
  >(Date());

  const uploadImage = async (e: any) => {
    const file = e.target.files[0];
    const added = await client.add(file);
    setImageHash(added.path);
  };

  useEffect(() => {
    loadWeb3();
  }, [loading]);

  const handleSubmit = async () => {
    setLoading(true);
    await polymarket.methods
      .createQuestion(title, imageHash, description, resolverUrl, timestamp)
      .send({
        from: account,
      });
    setLoading(false);
    setTitle("");
    setDescription("");
    setImageHash("");
    setResolverUrl("");
    setTimestamp(undefined);
    router.push("/");
  };

  return (
    <>
      <Box
        sx={{
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          alignItems: "center",
          height: "100%",
          padding: 5,
        }}
      >
        <Head>
          <title>Polymarket</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {/* <Navbar /> */}
        <main>
          <Container maxWidth="lg">
            <Link href="/admin/markets" style={{ textDecoration: "none" }}>
              <Button
                variant="outlined"
                color="primary"
                sx={{ marginTop: 5, marginBottom: 5, width: "100%" }}
              >
                See All Markets
              </Button>
            </Link>
            <Box
              sx={{
                border: 1,
                borderColor: "grey.300",
                borderRadius: 2,
                padding: 5,
                width: "100%",
              }}
            >
              <Typography
                variant="h6"
                sx={{ marginTop: 4, fontWeight: "bold" }}
              >
                Add New Market
              </Typography>
              <TextField
                label="Market Title"
                name="title"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                variant="outlined"
                fullWidth
                sx={{ marginTop: 3 }}
              />
              <TextField
                label="Market Description"
                name="description"
                value={description}
                onChange={(e) => setDescription(e.target.value)}
                variant="outlined"
                multiline
                rows={4}
                fullWidth
                sx={{ marginTop: 3 }}
              />
              <FormControl fullWidth sx={{ marginTop: 3 }}>
                <InputLabel>Market Title Image</InputLabel>
                <input type="file" onChange={uploadImage} />
              </FormControl>
              <TextField
                label="Resolve URL"
                name="resolverUrl"
                value={resolverUrl}
                onChange={(e) => setResolverUrl(e.target.value)}
                variant="outlined"
                fullWidth
                sx={{ marginTop: 3 }}
              />
              <TextField
                type="date"
                name="timestamp"
                value={timestamp}
                onChange={(e) => {
                  setTimestamp(e.target.valueAsDate?.getTime());
                }}
                variant="outlined"
                fullWidth
                sx={{ marginTop: 3 }}
              />
              {loading ? (
                <Typography
                  textAlign="center"
                  variant="h6"
                  sx={{ paddingTop: 3, paddingBottom: 3, fontWeight: "bold" }}
                >
                  Loading...
                </Typography>
              ) : (
                <Button
                  variant="contained"
                  color="success"
                  sx={{ marginTop: 5, width: "100%" }}
                  onClick={() => handleSubmit()}
                >
                  Create Market
                </Button>
              )}
            </Box>
          </Container>
        </main>
      </Box>
    </>
  );
};

export default Admin;

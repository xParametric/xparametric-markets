"use client";
import Head from "next/head";
import Link from "next/link";
import React, { useCallback, useEffect, useState } from "react";
import { MarketProps } from "../../page";
import { AdminMarketCard } from "../../../components/AdminMarketCard";
import Navbar from "../../../components/Navbar";
import { useData } from "@/context/DataContext";
import { Box, Button, Grid } from "@mui/material";

const Markets: React.FC = () => {
  const { polymarket, account, loadWeb3, loading } = useData();
  const [markets, setMarkets] = useState<MarketProps[]>([]);

  const getMarkets = useCallback(async () => {
    var totalQuestions = await polymarket.methods
      .totalQuestions()
      .call({ from: account });
    var dataArray: MarketProps[] = [];
    for (var i = 0; i < totalQuestions; i++) {
      var data = await polymarket.methods.questions(i).call({ from: account });
      dataArray.push({
        id: data.id,
        title: data.question,
        imageHash: data.creatorImageHash,
        totalAmount: data.totalAmount,
        totalYes: data.totalYesAmount,
        totalNo: data.totalNoAmount,
      });
    }
    setMarkets(dataArray);
  }, [account, polymarket]);

  useEffect(() => {
    loadWeb3().then(() => {
      if (!loading) getMarkets();
    });
  }, [loading]);

  return (
    <>
      <Box
        sx={{
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          alignItems: "center",
          height: "100%",
        }}
      >
        <Head>
          <title>Polymarket</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {/* <Navbar /> */}
        <Box sx={{ width: "100%", maxWidth: "5xl", margin: "auto" }}>
          <Link href="/admin" passHref>
            <Button
              variant="contained"
              color="primary"
              sx={{ marginTop: 2, marginBottom: 2 }}
              onClick={() => {}}
            >
              Back
            </Button>
          </Link>
        </Box>
        <main>
          <Grid
            container
            spacing={2}
            sx={{ width: "100%", maxWidth: "5xl", paddingBottom: 6 }}
          >
            {markets &&
              markets.map((market) => (
                <Grid item xs={12} sm={6} key={market.id}>
                  <AdminMarketCard
                    id={market.id}
                    imageHash={market.imageHash}
                    title={market.title}
                    totalAmount={market.totalAmount}
                    onYes={async () => {
                      await polymarket.methods
                        .distributeWinningAmount(market.id, true)
                        .send({ from: account });
                    }}
                    onNo={async () => {
                      await polymarket.methods
                        .distributeWinningAmount(market.id, false)
                        .send({ from: account });
                    }}
                  />
                </Grid>
              ))}
          </Grid>
        </main>
      </Box>
    </>
  );
};

export default Markets;
